Here is end-user documentation for the Vault Agent Injector, formatted for Confluence. You can paste this directly into a Confluence page to preserve headings, lists, and code formatting.


---

Vault Agent Injector - End User Guide

This document provides step-by-step instructions for application developers and operators to integrate HashiCorp Vault secrets into Kubernetes workloads using the Vault Agent Injector. It covers the required annotations, deployment patterns, and best practices.


---

Overview

The Vault Agent Injector allows Vault secrets to be automatically injected into Kubernetes pods as files or environment variables using annotations. It requires Vault Agent, configured via Mutating Admission Webhook, to mutate pod specifications at deployment time.


---

Prerequisites

Kubernetes cluster with the Vault Agent Injector Webhook deployed and configured.

Vault server accessible from the cluster.

Vault Kubernetes authentication method enabled and configured.

Vault policies in place for the application service account.



---

Vault Injector Workflow

1. Pod is created with specific annotations.


2. Vault Agent Injector mutates the pod to include:

Vault Agent sidecar container.

Shared volume for secrets.

Init container (if required).



3. Vault Agent authenticates and retrieves secrets from Vault.


4. Secrets are written to shared volumes and available to the main container.




---

Required Annotations

Below are the common annotations required on Kubernetes Deployment, StatefulSet, or Pod specs.

Basic Annotations

Annotation	Description

vault.hashicorp.com/agent-inject	Must be set to true to enable injection.
vault.hashicorp.com/role	Vault role to use for authentication.
vault.hashicorp.com/agent-inject-secret-<file>	Path of the secret in Vault. <file> is the filename inside the container.
vault.hashicorp.com/agent-inject-template-<file> (Optional)	Go template to format the secret.
vault.hashicorp.com/agent-inject-file-<file> (Optional)	Rename the output file to custom name.
vault.hashicorp.com/agent-inject-token (Optional)	If set to true, the Vault token is injected.
vault.hashicorp.com/namespace (Vault Enterprise)	Specifies the Vault namespace to use.



---

Example Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: example
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "example-app-role"
        vault.hashicorp.com/agent-inject-secret-config: "secret/data/apps/example/config"
        vault.hashicorp.com/agent-inject-template-config: |
          {{- with secret "secret/data/apps/example/config" -}}
          export DB_USERNAME={{ .Data.data.username }}
          export DB_PASSWORD={{ .Data.data.password }}
          {{- end }}
        vault.hashicorp.com/agent-inject-file-config: "app.env"
      labels:
        app: example
    spec:
      serviceAccountName: example-app-sa
      containers:
      - name: app
        image: busybox
        command: ["/bin/sh"]
        args: ["-c", "source /vault/secrets/app.env && env && sleep 3600"]


---

File Injection Path

Injected files are available at:

/vault/secrets/<file>

In the above example:
/vault/secrets/app.env


---

Best Practices

Use dedicated Vault roles and policies per application.

Restrict Vault access to the minimum necessary paths.

Use short-lived tokens and enable Vault Agent auto-renew.

Avoid injecting secrets as environment variables directly; use files whenever possible.

Monitor Vault Agent logs for issues (/vault/logs/).



---

Troubleshooting

Issue	Resolution

Secrets not injected	Check annotations, Vault role, and policy bindings.
Pod stuck in Init	Inspect Vault Agent logs and validate access.
Vault 403 errors	Verify the Vault role and policies are correctly configured.
Namespace issues	Ensure the correct Vault namespace is set using vault.hashicorp.com/namespace.



---

Useful Links

Vault Injector Documentation

Vault Policies Guide

Vault Kubernetes Auth Method



---

Let me know if you want a downloadable version or a Confluence storage format (XML/JSON).

